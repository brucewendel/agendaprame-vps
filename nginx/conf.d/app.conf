# Substitua 'agendapra.me' pelo seu domínio real

# 1. Servidor de redirecionamento (HTTP -> HTTPS)
server {
    listen 80;
    server_name agendapra.me;

    # Rota para o desafio do Certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redireciona todo o resto para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# 2. Servidor principal (HTTPS)
server {
    listen 443 ssl http2;
    server_name agendapra.me;

    # --- Configurações de SSL ---
    ssl_certificate /etc/letsencrypt/live/agendapra.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agendapra.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # --- Rota para o Backend --- #
    # Todas as chamadas para https://agendapra.me/api/...
    location /api/ {
        # Reescreve a URL, removendo o /api/ do início antes de enviar ao backend
        rewrite ^/api/(.*)$ /$1 break;

        proxy_pass http://backend:8000; # Nome do serviço backend e porta
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Rota para o Frontend --- #
    # Todas as outras chamadas (https://agendapra.me/, /dashboard, etc.)
    location / {
        # Define a raiz como o diretório servido pelo Nginx do frontend
        root /usr/share/nginx/html;
        
        # Tenta encontrar o arquivo correspondente à URL
        # 1. $uri: Procura um arquivo com o nome exato (ex: /dashboard)
        # 2. $uri.html: Procura um arquivo com .html no final (ex: /dashboard.html)
        # 3. $uri/: Procura por um diretório/index.html (ex: /)
        # 4. =404: Se nada for encontrado, retorna 404
        try_files $uri $uri.html $uri/ =404;
    }
}